/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edunova.jp23.view;

import com.github.lgooddatepicker.components.DatePickerSettings;
import edunova.jp23.controller.ObradaGrupa;
import edunova.jp23.controller.ObradaPredavac;
import edunova.jp23.controller.ObradaSmjer;
import edunova.jp23.model.Grupa;
import edunova.jp23.model.Polaznik;
import edunova.jp23.model.Predavac;
import edunova.jp23.model.Smjer;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Locale;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;

/**
 *
 * @author filip
 */
public class GrupaForma extends javax.swing.JFrame {

    private ObradaGrupa obrada;

    /**
     * Creates new form GrupaForma
     */
    public GrupaForma() {
        initComponents();
        obrada = new ObradaGrupa();
        setTitle(Aplikacija.NASLOV_APP + " Grupe");
        ucitajEntitete();
        ucitajSmjerove();
        ucitajPredavacee();
        prilagodiDpDatumPocetka();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstEntiteti = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        txtNaziv = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cmbSmjerovi = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        cmbPredavaci = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstPolazniciNaGrupi = new javax.swing.JList<>();
        dpDatumPocetka = new com.github.lgooddatepicker.components.DatePicker();
        jLabel4 = new javax.swing.JLabel();
        slBrojPolaznika = new javax.swing.JSlider();
        jLabel5 = new javax.swing.JLabel();
        lblPolaznika = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstPolazniciUSkoli = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lstEntiteti.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstEntiteti.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstEntitetiValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstEntiteti);

        jLabel1.setText("Naziv");

        jLabel2.setText("Smjer");

        jLabel3.setText("Predavac");

        jScrollPane2.setViewportView(lstPolazniciNaGrupi);

        jLabel4.setText("Datum pocetka");

        slBrojPolaznika.setMaximum(25);
        slBrojPolaznika.setMinimum(1);
        slBrojPolaznika.setValue(12);
        slBrojPolaznika.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slBrojPolaznikaStateChanged(evt);
            }
        });

        jLabel5.setText("Maksimalno polaznika");

        jScrollPane3.setViewportView(lstPolazniciUSkoli);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbSmjerovi, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtNaziv)
                    .addComponent(cmbPredavaci, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 127, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dpDatumPocetka, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(slBrojPolaznika, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblPolaznika, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 2, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dpDatumPocetka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblPolaznika, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cmbSmjerovi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(slBrojPolaznika, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbPredavaci, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                            .addComponent(jScrollPane3)))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void lstEntitetiValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstEntitetiValueChanged
        if (evt.getValueIsAdjusting()) {
            return;
        }

        if (lstEntiteti.getSelectedValue() == null) {
            return;
        }

        obrada.setEntitet(lstEntiteti.getSelectedValue());

        var g = obrada.getEntitet();
        // nema potrebe za sljedećom linijom, piše se kao iznad
        //Grupa g = obrada.getEntitet();

        txtNaziv.setText(g.getNaziv());

        //Ukoliko nemate dvije identične instance
        // ovo neće proći
        cmbSmjerovi.setSelectedItem(g.getSmjer());

        //cmbPredavaci.setSelectedItem(g.getPredavac());
        DefaultComboBoxModel<Predavac> mp
                = (DefaultComboBoxModel<Predavac>) cmbPredavaci.getModel();
        for (int i = 0; i < mp.getSize(); i++) {
            if (mp.getElementAt(i).getId().equals(g.getId())) {
                cmbPredavaci.setSelectedIndex(i);
                break;
            }
        }

        if(g.getDatumPocetka()!=null){
            dpDatumPocetka.setDate(g.getDatumPocetka().toInstant()
        .atZone(ZoneId.systemDefault()).toLocalDate());
       }else{
           dpDatumPocetka.setDate(null);
       }
       
       if(g.getBrojPolaznika()!=null){
            slBrojPolaznika.setValue(g.getBrojPolaznika());
       }else{
           slBrojPolaznika.setValue(0);
       }
        
        DefaultListModel<Polaznik> m = new DefaultListModel<>();
        m.addAll(g.getPolaznici());
        lstPolazniciNaGrupi.setModel(m);

    }//GEN-LAST:event_lstEntitetiValueChanged

    private void slBrojPolaznikaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slBrojPolaznikaStateChanged
        lblPolaznika.setText(String.valueOf(slBrojPolaznika.getValue()));
    }//GEN-LAST:event_slBrojPolaznikaStateChanged

    private void ucitajEntitete() {

        DefaultListModel<Grupa> m = new DefaultListModel<>();

        //m.addAll(obrada.getPodaci());
        System.out.println("Smjerovi na grupama");
        obrada.getPodaci().forEach(xxxx -> {
            m.addElement(xxxx);
            System.out.println(
                    xxxx.getSmjer().getNaziv() + ": "
                    + xxxx.getSmjer().hashCode());
        });

        lstEntiteti.setModel(m);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Predavac> cmbPredavaci;
    private javax.swing.JComboBox<Smjer> cmbSmjerovi;
    private com.github.lgooddatepicker.components.DatePicker dpDatumPocetka;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblPolaznika;
    private javax.swing.JList<Grupa> lstEntiteti;
    private javax.swing.JList<Polaznik> lstPolazniciNaGrupi;
    private javax.swing.JList<Polaznik> lstPolazniciUSkoli;
    private javax.swing.JSlider slBrojPolaznika;
    private javax.swing.JTextField txtNaziv;
    // End of variables declaration//GEN-END:variables

    private void ucitajSmjerove() {

        DefaultComboBoxModel<Smjer> m
                = new DefaultComboBoxModel<>();
        Smjer s = new Smjer();
        s.setId(-1L);
        s.setNaziv("Odaberite smjer");
        m.addElement(s);
        System.out.println("Smjerovi u CMB");
        new ObradaSmjer().getPodaci().forEach(sm -> {
            m.addElement(sm);
            System.out.println(sm.getNaziv() + ": "
                    + sm.hashCode());
        });

        cmbSmjerovi.setModel(m);
        cmbSmjerovi.setSelectedIndex(0);
    }

    private void ucitajPredavacee() {

        DefaultComboBoxModel<Predavac> m
                = new DefaultComboBoxModel<>();

        m.addAll(new ObradaPredavac().getPodaci());

        cmbPredavaci.setModel(m);
        cmbPredavaci.setSelectedIndex(0);

    }

    private void prilagodiDpDatumPocetka() {
        
        DatePickerSettings dps = new DatePickerSettings(new Locale("hr" , "HR"));
        dps.setFormatForDatesCommonEra("dd.MM.yyyy");
        dpDatumPocetka.setSettings(dps);
        
    }
}
